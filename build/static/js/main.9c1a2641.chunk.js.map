{"version":3,"sources":["components/home.js","components/candidates.js","components/voters.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","address","setAddress","name","setName","age","setAge","image","setImage","description","setDescription","voterAddress","setVoterAddress","show","setShow","handleClose","vshow","setVShow","handleVClose","Navbar","bg","Container","Brand","href","Toggle","Nav","className","Badge","cUSDBalance","Collapse","Button","onClick","variant","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","placeholder","as","style","height","Footer","disabled","addCandidate","giveVotingRight","Candidates","Row","xs","md","candidates","map","candidate","Col","Card","Stack","direction","gap","index","voteCount","src","alt","objectFit","Text","vote","Voters","voters","v","ListGroup","Item","contractAddress","App","contract","setcontract","kit","setKit","setcUSDBalance","setCandidates","setVoters","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","console","log","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","devote","getCandidates","methods","getCandidateLength","call","candidatesLength","_candidates","Promise","resolve","reject","getCandidate","candidateAddress","push","all","getVotersList","votersList","_address","_name","_age","_image","_description","send","from","cUSDContract","IERC","ammount","BigNumber","toString","approve","useEffect","walletAddress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1a2641.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Button, Modal, Form, FloatingLabel, Nav, Badge, Container, Navbar } from \"react-bootstrap\";\r\n\r\nconst Home = (props) => {\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n\r\n  const [voterAddress, setVoterAddress] = useState(\"\");\r\n\r\n\r\n\r\n\r\n  const isFormFilled = () => address && name && age && image && description;\r\n  const isVFormFilled = () => voterAddress;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [vshow, setVShow] = useState(false);\r\n\r\n  const handleVClose = () => setVShow(false);\r\n  const handleVShow = () => setVShow(true);\r\n\r\n\r\n\r\n  return (\r\n<>\r\n    <Navbar bg=\"light\" >\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">Devote</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Nav className=\"me-auto\">\r\n        \r\n        <Badge bg=\"secondary\" className=\"ms-auto\">\r\n             Balance {props.cUSDBalance}cUSD\r\n           </Badge>\r\n       \r\n          </Nav>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n        \r\n        <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        \r\n      >\r\n        <h5> Add Candidate </h5>\r\n      </Button>\r\n\r\n      <Button\r\n        onClick={handleVShow}\r\n        variant=\"dark\"\r\n        \r\n      >\r\n        <h5> Give Voting Right </h5>\r\n      </Button>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n\r\n    \r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Candidate</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n          <FloatingLabel\r\n              controlId=\"inputAddress\"\r\n              label=\"CandidateAddress\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setAddress(e.target.value);\r\n                }}\r\n                placeholder=\"Candidate Address\"\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputName\"\r\n              label=\"Name of Candidate\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder=\"name of candidate\"\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputAge\"\r\n              label=\"Age\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setAge(e.target.value);\r\n                }}\r\n                placeholder=\"Age\"\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"inputImage\"\r\n              label=\"Image\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n                placeholder=\"Image\"\r\n              />\r\n            </FloatingLabel>\r\n            \r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            \r\n           \r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              props.addCandidate( \r\n                address,\r\n                name,\r\n                age,\r\n                image,\r\n                description,\r\n              );\r\n              handleClose();\r\n            }}\r\n          >\r\n            Add Candidate\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal show={vshow} onHide={handleVClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Voter</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n          <FloatingLabel\r\n              controlId=\"inputAddress\"\r\n              label=\"VoterAddress\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setVoterAddress(e.target.value);\r\n                }}\r\n                placeholder=\"Voter Address\"\r\n              />\r\n            </FloatingLabel>\r\n           \r\n           \r\n           \r\n            \r\n            \r\n           \r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleVClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isVFormFilled()}\r\n            onClick={() => {\r\n              props.giveVotingRight( \r\n                voterAddress,\r\n              );\r\n              handleVClose();\r\n            }}\r\n          >\r\n           Give voting right\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Card, Badge, Col, Stack, Button, Row } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nexport const Candidates = (props) => {\r\n\r\n\r\nreturn ( \r\n    <Row xs={1} md={3} className=\"g-4\">\r\n    {props.candidates.map((candidate)=> (\r\n     <Col key={candidate.index}>\r\n     <Card className=\" h-100\">\r\n       <Card.Header>\r\n         <Stack direction=\"horizontal\" gap={2}>\r\n           <Badge bg=\"secondary\" className=\"ms-auto\">\r\n             {candidate.index} ID\r\n           </Badge>\r\n\r\n           <Badge bg=\"secondary\" className=\"ms-auto\">\r\n             {candidate.voteCount} vote count\r\n           </Badge>\r\n         </Stack>\r\n       </Card.Header>\r\n\r\n       <div className=\" ratio ratio-4x3\">\r\n         <img src={candidate.image} alt={candidate.description} style={{ objectFit: \"cover\" }} />\r\n       </div>\r\n\r\n       <Card.Body className=\"d-flex  flex-column text-center\">\r\n         <Card.Title>{candidate.name}</Card.Title>\r\n         <Card.Title>Age: {candidate.age}</Card.Title>\r\n         <Card.Text className=\"flex-grow-1\">{candidate.description}</Card.Text>\r\n         <Button variant=\"primary mt-2\" onClick={() => props.vote(candidate.index)}>\r\n              Vote for this candidate 1cUSD\r\n             </Button>\r\n\r\n       \r\n       </Card.Body>\r\n     </Card>\r\n   </Col>\r\n\r\n  ))}\r\n</Row>\r\n  \r\n)};\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nexport const Voters = ({voters}) => {\r\n\r\n  return (\r\n<>\r\n<h1> Voters </h1>\r\n{voters.map((v) => (\r\n    \r\n    <ListGroup className=\"mb-2\">\r\n   <ListGroup.Item>{v}</ListGroup.Item>\r\n    </ListGroup>\r\n\r\n    ))}\r\n   \r\n    </>\r\n  );\r\n  \r\n}\r\n","\r\nimport './App.css';\r\nimport Home from './components/home';\r\nimport { Candidates } from './components/candidates';\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport devote from \"./contracts/devote.abi.json\";\r\nimport IERC from \"./contracts/IERC.abi.json\";\r\nimport { Voters } from './components/voters';\r\n\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst contractAddress = \"0x3456A620e67891a333F934584F332E4460F4E043\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [voters, setVoters] = useState([]);\r\n  \r\n\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Error Occurred\");\r\n    }\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n\r\n      const contract = new kit.web3.eth.Contract(devote, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [address, kit]);\r\n\r\n\r\n\r\n  const getCandidates = useCallback(async () => {\r\n    const candidatesLength = await contract.methods.getCandidateLength().call();\r\n    const candidates = [];\r\n    for (let index = 0; index < candidatesLength; index++) {\r\n      let _candidates = new Promise(async (resolve, reject) => {\r\n      let candidate = await contract.methods.getCandidate(index).call();\r\n\r\n        resolve({\r\n          index: index,\r\n          candidateAddress: candidate[0],\r\n          name: candidate[1],\r\n          age: candidate[2],\r\n          image: candidate[3],\r\n          description: candidate[4],\r\n          voteCount: candidate[5],\r\n         \r\n        });\r\n      });\r\n      candidates.push(_candidates);\r\n    }\r\n\r\n\r\n    const _candidates = await Promise.all(candidates);\r\n    setCandidates(_candidates);\r\n  }, [contract]);\r\n\r\n  const getVotersList = useCallback( async () => {\r\n    try {\r\n      const votersList =  await contract.methods.getVotersList().call();\r\n\r\n      setVoters(votersList);\r\n\r\n    } catch (e) {\r\n        console.log({e});\r\n    }\r\n}, [contract]);\r\n\r\n\r\n  const addCandidate = async (\r\n    _address,\r\n    _name,\r\n    _age,\r\n    _image,\r\n    _description,\r\n \r\n  ) => {\r\n  \r\n    try {\r\n      await contract.methods\r\n        .addCandidate(_address, _name, _age, _image, _description)\r\n        .send({ from: address });\r\n      getCandidates();\r\n      getVotersList();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n\r\n  const giveVotingRight = async (voterAddress) => { \r\n    try {\r\n      await contract.methods.giveVotingRight(voterAddress).send({ from: address });\r\n      getCandidates();\r\n      getVotersList();\r\n      alert(\"you have successfully given right to vote\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }};\r\n\r\n    \r\n\r\n  const vote = async (index) => {\r\n    try {\r\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\r\n        let ammount = new BigNumber(1).shiftedBy(ERC20_DECIMALS).toString();\r\n      await cUSDContract.methods\r\n        .approve(contractAddress, ammount)\r\n        .send({ from: address });\r\n      await contract.methods.vote(index, ammount).send({ from: address });\r\n      getCandidates();\r\n      getVotersList();\r\n      getBalance();\r\n      alert(\"you have successfully voted for this candidate\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }};\r\n\r\n\r\n  useEffect(() => {\r\n    connectToWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && address) {\r\n      getBalance();\r\n    }\r\n  }, [kit, address, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (contract) {\r\n      getCandidates();\r\n      getVotersList();\r\n    }\r\n  }, [contract, getCandidates, getVotersList]);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Home cUSDBalance={cUSDBalance} addCandidate={addCandidate} giveVotingRight={giveVotingRight} />\r\n      <Voters voters={voters} />\r\n      <Candidates \r\n      candidates={candidates}\r\n      vote={vote} \r\n      walletAddress={address} \r\n     \r\n      />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}